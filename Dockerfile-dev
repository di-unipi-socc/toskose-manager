# Dockerfile-dev for setting up the toskose manager in a development environment
# passing the ARG TEST_CASE=<case_study_name> for switching between case studies
# - thinking (default) - the Thinking case study
# - sockshop - the Sock Shop case study
#
# Notes 
# - It works only with Python 3.7+

ARG PYTHON_VERSION=3.7.2

FROM python:${PYTHON_VERSION}-slim
LABEL maintainer.name "Matteo Bogo" \
      maintainer.email "matteo.bogo@protonmail.com"

ARG CASE_STUDY=thinking

# see app/config.py for available options
ENV TOSKOSE_MANAGER_PORT=10000 \
    TOSKOSE_APP_MODE=development \
    TOSKOSE_LOGS_PATH=/logs/toskose \
    TOSKOSE_CONFIG_PATH=/toskose/config \
    TOSKOSE_TOSCA_MANIFEST_PATH=/toskose/manifest \
    FLASK_APP=/toskose/source/app/run.py \
    FLASK_ENV=development

RUN mkdir -p /toskose/ ${TOSKOSE_LOGS_PATH}

# prepare the development environment
WORKDIR /toskose
COPY ./requirements.txt /toskose/requirements.txt

RUN apt-get update -qq \
    && apt-get install -y --no-install-recommends \
    git \
    > /dev/null \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && python -m ensurepip \
    && pip install --no-cache-dir -r requirements.txt

WORKDIR /toskose/source
COPY ./app app/

WORKDIR /toskose/config
COPY ./tests/data/${CASE_STUDY}/config/ .

WORKDIR /toskose/manifest
COPY ./tests/data/${CASE_STUDY}/manifest/ .

WORKDIR /toskose
EXPOSE ${TOSKOSE_MANAGER_PORT}/tcp

# run flask with VScode debugger
#ENTRYPOINT flask run --host="0.0.0.0" --port ${TOSKOSE_MANAGER_PORT}